Плагин Cuda Math для математических расчетов. Ищет математические выражения в тексте и выполняет их расчет с выводом результата.
Расчеты происходят автоматически при включенном лексере Math (необходимо установить дополнительно) или вручную коммандой Calc all (Внимание! Во избежание утери данных, данная команда работает только для файлов без лексера или с лексером Math).
Кроме обычных чисел плагин также поддерживает числа с експонентой (пример 653e-12).
Плагин поддерживает округления результатов расчета по шаблону заданном в опции round_mask.
Также можно задать различные способы округления, в опции round_type:
    ROUND_CEILING - Округление в сторону положительной бесконечности. Например, число 2.52 будет округлено до 2.6, а число –2.58 до –2.5.
    ROUND_DOWN - Округление в сторону нуля. Например, число 2.58 будет округлено до 2.5, а число –2.58 – до -2.5.
    ROUND_FLOOR - Округление в сторону отрицательной бесконечности. Например, число 2.52 будет округлено до 2.5, а число –2.58 до –2.6.
    ROUND_HALF_DOWN - Округление в сторону от нуля, если округляемая часть больше половины последнего значимого разряда, в противном случае округление будет выполнено в сторону нуля. Например, число 2.58 будет округлено до 2.6, число 2.55 будет округлено до 2.5, а число –2.58 до –2.6.
    ROUND_HALF_EVEN - То же, что и ROUND_HALF_DOWN, только если округляемая часть равна точно половине последнего значимого разряда, результат округляется вниз, если предыдущая цифра четная, и вверх – если предыдущая цифра нечетная. Например, число 2.65 будет округлено до 2.6, число 2.55 также будет округлено до 2.6.
    ROUND_HALF_UP - То же, что и ROUND_HALF_DOWN, только если округляемая часть равна точно половине последнего значимого разряда, результат округляется в сторону от нуля. Например, число 2.55 будет округлено до 2.6, а число –2.55 до –2.6.
    ROUND_UP - Округление в сторону от нуля. Например, число 2.52 будет округлено до 2.6, а число –2.52 – до –2.6.
    ROUND_05UP - Округление в сторону от нуля, если последний значимый разряд содержит цифру 0 или 5, в противном случае округление выполняется в сторону нуля. Например, число 2.54 будет округлено до 2.6, число 2.64 также будет округлено до 2.6.

Все матеметические выражения нужно записывать БЕЗ ПРОБЕЛОВ.

ERRORS
Если во время расчета были обнаружены ошибки, плагин их подчеркнет красным. Также в статус баре будет показано сообщение о количестве ошибок.

OPERATORS
    +  -  *  /  простые операторы
    **  ^  ²  ³  возведение в степень
    >  <  >=  <=  !=  ==  логические операторы

COMMENTS
Все что идет в строке после знака # считается комментарием.

CONST
    True
    False
    Pi
    E

VARIABLES
Вы можете создавать переменные которые позже можно будет использовать в матиматических выражениях, просто написав:
    b=12
также можно сразу записывать результат выражения в переменную:
    b=34+23**2-sin(14)
или показать результат расчета и записать его в переменную:
    b=34+23**2-sin(14)=562.7581  # здесь значение 562.7581 будет посчитано и добалено автоматически.

Имена всех констант, переменных и функций являются регистрозависимими.
Область видимости переменных:
    Переменные имеют область видимости. Переменная будет видна в блоке текста с одинаковым отступом, а также в строках с меньшим отступом перед этим блоком текста. Это позволяет писать так:
        X=t*12-4*r=  # здесь будет результат расчета
            t=Pi*1.234
            r=23e-4
        t+100=  # здесь уже будет ошибка расчета, поскольку переменная t уже недоступна
    Для того чтобы сделать переменную глобальной, нужно название переменной начать с знака $. Предыдущий пример можно переписать следующим образом.
        X=$t*12-4*r=  # здесь будет результат
            $t=Pi*1.234
            r=23e-4
        $t+100=  # здесь тоже будет результат

FUNCS
    IF(expr,v1,v2) возвращает v1, если expr = True, иначе v2
    AND(x1,x2,...,xn) возвращает True если все x1 ... xn = True
    OR(x1,x2,...,xn) возвращает True если хотя бы одно значение x1 ... xn = True
    NOT(bool) возвращает противоположное логическое значение

    max(x1,x2,...,xn) возвращает максимальное значение
    min(x1,x2,...,xn) возвращает минимальное значение
    sum(x1,x2,...,xn) возвращает сумму значений
    mid(x1,x2,...,xn) возвращает среднее значение

    abs(x) абсолютное значение от x
    deg(x) радианы в градусы
    rad(x) градусы в радианы
    pow(x,y) преподнести x в степень y
    sqrt(x) квадратный корень
    rt(x,n) корень от x в n степени
    hypot(x,y) гипотенуза по двум катетам x,y. Аналогично sqrt(x*x + y*y)
    roundup(x) округлить до целого числа в большую сторону
    rounddown(x) округлить до целого числа в меньшую сторону
    round(x) округлить до целого числа
    rnd(x,maks=1) округлить по маске (по умолчанию до целого числа)
    cos(x) косинус от x в градусах
    acos(x) арккосинус от x в градусах
    cosec(x) косеканс от x в градусах
    sin(x) синус от x в градусах
    asin(x) арксинус от x в градусах
    sec(x) секанс от x в градусах
    tg(x) тангенс от x в градусах
    tan(x) тангенс от x в градусах
    atan(x) арктангенс от x в градусах
    ctg(x) котангенс от x в градусах
    exp(x) e в степени x
    log(x, [base]) логарифм x по основанию base. Если base не указано, считается натуральный логарифм.
    ln(x) натуральный логарифм.
    lg(x) десятичный логарафм от x
    log10(x) десятичный логарафм от x
